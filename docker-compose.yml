version: '3.8'

services:

  nginx:
    build:
      context: nginx/
      args:
        NGINX_VERSION: $NGINX_VERSION
    hostname: nginx
    container_name: nginx
    volumes:
      - type: bind
        source: ./nginx/config/conf.d
        target: /etc/nginx/conf.d/
        read_only: true
    ports:
      - "80:80"
    networks:
      - garuss-network
    depends_on:
      - elasticsearch
      - alertmanager
      - prometheus
      - prometheus-fed
      - jenkins
      - kibana

  elasticsearch:
    build:
      context: elasticsearch/
      args:
        ELK_VERSION: $ELK_VERSION
    hostname: elasticsearch
    container_name: elasticsearch
    volumes:
      - type: bind
        source: ./elasticsearch/config/elasticsearch.yml
        target: /usr/share/elasticsearch/config/elasticsearch.yml
        read_only: true
      - type: volume
        source: elasticsearch-data
        target: /usr/share/elasticsearch/data
#    ports:
#      - "9200:9200"
#      - "9300:9300"
    environment:
      ES_JAVA_OPTS: "-Xmx256m -Xms256m"
      ELASTIC_PASSWORD: changeme
      discovery.type: single-node
    networks:
      - garuss-network

  logstash:
    build:
      context: logstash/
      args:
        ELK_VERSION: $ELK_VERSION
    hostname: logstash
    container_name: logstash
    volumes:
      - type: bind
        source: ./logstash/config/logstash.yml
        target: /usr/share/logstash/config/logstash.yml
        read_only: true
      - type: bind
        source: ./logstash/pipeline
        target: /usr/share/logstash/pipeline
        read_only: true
#    ports:
#      - "5044:5044"
#      - "5001:5000"
#      - "9600:9600"
    environment:
      LS_JAVA_OPTS: "-Xmx256m -Xms256m"
    networks:
      - garuss-network
    depends_on:
      - elasticsearch

  kibana:
    build:
      context: kibana/
      args:
        ELK_VERSION: $ELK_VERSION
    hostname: kibana
    container_name: kibana
    volumes:
      - type: bind
        source: ./kibana/config/kibana.yml
        target: /usr/share/kibana/config/kibana.yml
        read_only: true
#    ports:
#      - "5601:5601"
    networks:
      - garuss-network
    depends_on:
      - elasticsearch

  fluentd:
    build:
      context: fluentd/
      args:
        FLUENTD_VERSION: $FLUENTD_VERSION
    hostname: fluentd
    container_name: fluentd
    ports:
      - "24224:24224" # Workaround 
#      - "24224:24224/udp"
    volumes:
      - type: bind
        source: ./fluentd/config/fluent.conf
        target: /fluentd/etc/fluent.conf
        read_only: true
    networks:
      - garuss-network
    depends_on:
      - elasticsearch

  grafana:
    build:
      context: grafana/
      args:
        GRAFANA_VERSION: $GRAFANA_VERSION
    hostname: grafana
    container_name: grafana
#    ports:
#      - 9000:3000
    volumes:
      - type: volume
        source: grafana-data
        target: /var/lib/grafana
      - type: bind
        source: ./grafana/config/grafana.ini
        target: /etc/grafana/grafana.ini
      - type: bind
        source: ./grafana/config/datasources
        target: /etc/grafana/provisioning/datasources
    networks:
      - garuss-network
    depends_on:
      - prometheus

  prometheus:
    build:
      context: prometheus/
      args:
        PROMETHEUS_VERSION: $PROMETHEUS_VERSION
    hostname: prometheus
    container_name: prometheus
#    ports:
#      - "9090:9090"
    volumes:
      - type: bind
        source: ./prometheus/config/prometheus.yml
        target: /etc/prometheus/prometheus.yml
        read_only: true
    networks:
      - garuss-network
    depends_on:
      - prometheus-fed

  prometheus-fed:
    build:
      context: prometheus/
      args:
        PROMETHEUS_VERSION: $PROMETHEUS_VERSION
    hostname: prometheus-fed
    container_name: prometheus-fed
#    ports:
#      - "9091:9090"
    volumes:
      - type: bind
        source: ./prometheus/config-fed/prometheus.yml
        target: /etc/prometheus/prometheus.yml
        read_only: true
      - type: bind
        source: ./prometheus/config-fed/rules.yml
        target: /etc/prometheus/rules.yml
        read_only: true
    networks:
      - garuss-network

  alertmanager:
    build:
      context: alertmanager/
      args:
        ALERTMANAGER_VERSION: $ALERTMANAGER_VERSION
    hostname: alertmanager
    container_name: alertmanager
#    ports:
#      - "9093:9093"
    volumes:
      - type: bind
        source: ./alertmanager/config/alertmanager.yml
        target: /etc/alertmanager/alertmanager.yml
        read_only: true
    networks:
      - garuss-network

  jenkins:
    build:
      context: jenkins/
      args:
        JENKINS_VERSION: $JENKINS_VERSION
    hostname: jenkins
    container_name: jenkins
#    ports:
#      - "8082:8080"
#      - "50000:50000"
    volumes:
      - type: volume
        source: jenkins-data
        target: /var/jenkins_home
    networks:
      - garuss-network
    depends_on:
      - fluentd
    logging:
      driver: fluentd
      options:
        fluentd-address: "tcp://docker.for.mac.localhost:24224" # mac
        # fluentd-address: "tcp://fluentd:24224" # linux

  vault:
    build:
      context: ./vault
      args:
        VAULT_VERSION: $VAULT_VERSION
    hostname: vault
    container_name: vault
#    ports:
#      - 8200:8200
    volumes:
      - type: volume
        source: vault-data
        target: /vault/data
      - type: bind
        source: ./vault/config
        target: /vault/config
      - type: bind
        source: ./vault/policies
        target: /vault/policies
    command: "server"
    cap_add:
      - IPC_LOCK
    networks:
      - garuss-network
    depends_on:
      - consul

  consul:
    build:
      context: ./consul
      args:
        CONSUL_VERSION: $CONSUL_VERSION
    hostname: consul
    container_name: consul
#    ports:
#      - 8500:8500
    command: agent -server -bind 0.0.0.0 -client 0.0.0.0 -bootstrap-expect 1 -config-file=/consul/config/config.json
    volumes:
      - type: volume
        source: consul-data
        target: /consul/data
      - type: bind
        source: ./consul/config
        target: /consul/config
    networks:
      - garuss-network

networks:
  garuss-network:
    driver: bridge

volumes:
  elasticsearch-data:
  grafana-data:
  jenkins-data:
  vault-data:
  consul-data: